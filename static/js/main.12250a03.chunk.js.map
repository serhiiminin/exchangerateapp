{"version":3,"sources":["components/wrapper.js","components/input-number.js","components/select.js","components/converter-rate.js","constants/currencies.js","api/fetcher.js","config.js","api/index.js","api/proxy.js","util/index.js","stores/index.js","components/menu.js","components/converter.js","components/header.js","components/main.js","components/rates-list.js","components/rates.js","root/index.js","serviceWorker.js","index.js"],"names":["WrapperCmp","styled","article","props","theme","colors","text","Header","header","background","light","Body","div","Wrapper","children","InputNumber","value","label","onChange","name","TextField","type","margin","variant","SelectCmp","items","Select","displayEmpty","map","currency","MenuItem","key","ConverterRate","sourceCurrency","targetCurrency","chosenRate","CURRENCIES_LIST","CURRENCIES_RATES","checkStatus","response","status","error","Error","statusText","parseJson","json","createFetcherJson","fetch","params","endpoint","body","headers","restParams","request","Request","JSON","stringify","Headers","accept","then","process","REACT_APP_API_ENDPOINT","REACT_APP_PROXY_ENDPOINT","endpoints","latest","history","proxy","apiEndpoints","config","fetcher","fetchProxy","window","createApi","getBased","fixNumberToPlace","num","place","toFixed","divide","a","b","multiply","configure","enforceActions","roundRates","rates","Object","fromEntries","entries","String","calculateCurrencyAmount","handler","rate","parseFloat","Number","amount","calculateAmount","multiplyAmount","StoreContext","createContext","observable","ratesList","this","isPriorityInConverter","includes","index","priorityCurrency","resultCurrency","setValue","divideAmount","startLoading","api","updatedRates","catch","finally","finishLoading","getRates","action","bound","changeSourceCurrency","changeTargetCurrency","changeSourceValue","changeTargetValue","cleanRates","List","ul","Item","li","Menu","title","path","ConverterInputs","event","target","Converter","observer","useContext","sourceValue","targetValue","HeaderCmp","Title","h1","MainWrapper","main","Main","RatesList","country","HeaderGrid","Grid","LoadingWrapper","Rates","cleanList","loading","todayRates","useEffect","container","justify","alignItems","item","CircularProgress","defaultProps","GlobalStyle","createGlobalStyle","Root","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12250a03.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst WrapperCmp = styled.article`\n  border: 1px solid ${props => props.theme.colors.text};\n`;\n\nconst Header = styled.header`\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.light};\n  height: 50px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Body = styled.div`\n  padding: 1rem;\n`;\n\nconst Wrapper = ({ header, children }) => (\n  <WrapperCmp>\n    <Header>{header}</Header>\n    <Body>{children}</Body>\n  </WrapperCmp>\n);\n\nWrapper.propTypes = {\n  header: PropTypes.node.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\n\nconst InputNumber = ({ value, label, onChange, name }) => (\n  <TextField\n    type=\"number\"\n    name={name}\n    label={label}\n    value={value}\n    onChange={onChange}\n    margin=\"normal\"\n    variant=\"outlined\"\n  />\n);\n\nInputNumber.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport default InputNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, MenuItem } from '@material-ui/core';\n\nconst SelectCmp = ({ value, onChange, items, name }) => (\n  <Select value={value} onChange={onChange} displayEmpty name={name}>\n    {items.map(currency => (\n      <MenuItem key={currency} value={currency}>\n        {currency}\n      </MenuItem>\n    ))}\n  </Select>\n);\n\nSelectCmp.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default SelectCmp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConverterRate = ({ sourceCurrency, targetCurrency, chosenRate }) => (\n  <footer>\n    <h5>Your rate:</h5>\n    <span>{`${sourceCurrency} 1 = ${targetCurrency} ${chosenRate}`}</span>\n  </footer>\n);\n\nConverterRate.propTypes = {\n  sourceCurrency: PropTypes.string.isRequired,\n  targetCurrency: PropTypes.string.isRequired,\n  chosenRate: PropTypes.string.isRequired,\n};\n\nexport default ConverterRate;\n","const CURRENCIES_LIST = [\n  'AUD',\n  'BGN',\n  'BRL',\n  'CAD',\n  'CHF',\n  'CNY',\n  'CZK',\n  'DKK',\n  'EUR',\n  'GBP',\n  'HKD',\n  'HRK',\n  'HUF',\n  'IDR',\n  'ILS',\n  'INR',\n  'ISK',\n  'JPY',\n  'KRW',\n  'MXN',\n  'MYR',\n  'NOK',\n  'NZD',\n  'PHP',\n  'PLN',\n  'RON',\n  'RUB',\n  'SEK',\n  'SGD',\n  'THB',\n  'TRY',\n  'USD',\n  'ZAR',\n];\n\nconst CURRENCIES_RATES = ['EUR', 'GBP', 'CAD', 'MXN', 'JPY'];\nconst DEFAULT_SOURCE_VALUE = '1000.00';\nconst EMPTY_VALUE = '';\nconst DEFAULT_CURRENCY = 'USD';\nconst PRIORITY_CURRENCY = 'ILS';\n\nexport { CURRENCIES_LIST, CURRENCIES_RATES, DEFAULT_CURRENCY, DEFAULT_SOURCE_VALUE, EMPTY_VALUE, PRIORITY_CURRENCY };\n","const checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n\n  error.response = response;\n  throw error;\n};\n\nconst parseJson = response => response.json();\n\nconst createFetcherJson = fetch => params => {\n  const { endpoint, body, headers, ...restParams } = params;\n\n  const request = new Request(endpoint, {\n    body: JSON.stringify(body),\n    headers: new Headers({\n      accept: 'application/json',\n      'content-type': 'application/json',\n      ...headers,\n    }),\n    ...restParams,\n  });\n\n  return fetch(request)\n    .then(checkStatus)\n    .then(parseJson);\n};\n\nexport default createFetcherJson;\n","const { REACT_APP_API_ENDPOINT, REACT_APP_PROXY_ENDPOINT } = process.env;\n\nexport default {\n  endpoints: {\n    latest: `${REACT_APP_API_ENDPOINT}/latest`,\n    history: `${REACT_APP_API_ENDPOINT}/history`,\n  },\n  proxy: REACT_APP_PROXY_ENDPOINT,\n};\n","import createFetcherJson from './fetcher';\nimport fetchProxy from './proxy';\nimport config from '../config';\n\nconst fetcher = fetchProxy(createFetcherJson(window.fetch));\nconst { endpoints } = config;\n\nconst createApi = apiEndpoints => ({\n  getBased: currency => fetcher({ endpoint: `${apiEndpoints.latest}?base=${currency}` }),\n});\n\nexport default createApi(endpoints);\n","import config from '../config';\n\nconst { proxy } = config;\n// use fetch proxy to solve CORS problems\nconst fetchProxy = fetcher => params => {\n  const { endpoint } = params;\n\n  return fetcher({\n    ...params,\n    endpoint: `${proxy}${endpoint}`,\n  });\n};\n\nexport default fetchProxy;\n","const fixNumberToPlace = (num, place) => num.toFixed(place);\nconst isFloatNumber = num => parseFloat(num) === Number(num);\nconst calculateAmount = handler => (amount, rate) => String(fixNumberToPlace(handler(Number(amount), Number(rate)), 2));\nconst divide = (a, b) => a / b;\nconst multiply = (a, b) => a * b;\n\nexport { fixNumberToPlace, isFloatNumber, calculateAmount, divide, multiply };\n","import { createContext } from 'react';\nimport { configure, observable, action } from 'mobx';\nimport api from '../api';\nimport {\n  CURRENCIES_RATES,\n  DEFAULT_CURRENCY,\n  DEFAULT_SOURCE_VALUE,\n  EMPTY_VALUE,\n  PRIORITY_CURRENCY,\n} from '../constants/currencies';\nimport { calculateAmount, divide, fixNumberToPlace, isFloatNumber, multiply } from '../util';\n\nconfigure({ enforceActions: 'observed' });\n\nconst roundRates = rates =>\n  Object.fromEntries(Object.entries(rates).map(([key, value]) => [key, String(fixNumberToPlace(value, 4))]));\n\nconst calculateCurrencyAmount = handler => (value, rate) =>\n  isFloatNumber(value) ? calculateAmount(handler)(value, rate) : EMPTY_VALUE;\n\nconst multiplyAmount = (value, rate) => calculateCurrencyAmount(multiply)(value, rate);\nconst divideAmount = (value, rate) => calculateCurrencyAmount(divide)(value, rate);\n\nconst RATES = 'rates';\nconst LOADING = 'loading';\nconst ERROR = 'error';\nconst SOURCE_CURRENCY = 'sourceCurrency';\nconst SOURCE_VALUE = 'sourceValue';\nconst TARGET_CURRENCY = 'targetCurrency';\nconst TARGET_VALUE = 'targetValue';\nconst CHOSEN_RATE = 'chosenRate';\n\nexport const StoreContext = createContext(\n  observable(\n    {\n      [RATES]: null,\n      [LOADING]: false,\n      [ERROR]: null,\n      [SOURCE_CURRENCY]: DEFAULT_CURRENCY,\n      [TARGET_CURRENCY]: PRIORITY_CURRENCY,\n      [SOURCE_VALUE]: DEFAULT_SOURCE_VALUE,\n      [TARGET_VALUE]: EMPTY_VALUE,\n      [CHOSEN_RATE]: EMPTY_VALUE,\n      get todayRates() {\n        const ratesList = this[RATES] || {};\n        const isPriorityInConverter = [this[SOURCE_CURRENCY], this[TARGET_CURRENCY]].includes(PRIORITY_CURRENCY);\n\n        return CURRENCIES_RATES.map((currency, index) => {\n          const priorityCurrency = !isPriorityInConverter && index === 0 ? PRIORITY_CURRENCY : currency;\n          const resultCurrency = priorityCurrency === this[SOURCE_CURRENCY] ? DEFAULT_CURRENCY : priorityCurrency;\n\n          return [resultCurrency, ratesList[resultCurrency]];\n        });\n      },\n      setValue(key, value) {\n        this[key] = value;\n      },\n      changeSourceCurrency(key, value) {\n        this.setValue(key, value);\n        this.setValue(TARGET_VALUE, multiplyAmount(this[SOURCE_VALUE], this[CHOSEN_RATE]));\n      },\n      changeTargetCurrency(key, value) {\n        const chosenRate = this[RATES][value] || EMPTY_VALUE;\n        this.setValue(key, value);\n        this.setValue(CHOSEN_RATE, chosenRate);\n        this.setValue(TARGET_VALUE, multiplyAmount(this[SOURCE_VALUE], chosenRate));\n      },\n      changeSourceValue(key, value) {\n        this.setValue(key, value);\n        this.setValue(TARGET_VALUE, multiplyAmount(value, this[CHOSEN_RATE]));\n      },\n      changeTargetValue(key, value) {\n        this.setValue(key, value);\n        this.setValue(SOURCE_VALUE, divideAmount(value, this[CHOSEN_RATE]));\n      },\n      startLoading() {\n        this.setValue(LOADING, true);\n      },\n      finishLoading() {\n        this.setValue(LOADING, false);\n      },\n      cleanRates() {\n        this.setValue(SOURCE_VALUE, null);\n      },\n      getRates(currency = this[SOURCE_CURRENCY]) {\n        this.startLoading();\n        api\n          .getBased(currency)\n          .then(({ rates }) => {\n            const updatedRates = roundRates(rates);\n            const chosenRate = updatedRates[this[TARGET_CURRENCY]] || EMPTY_VALUE;\n\n            this.setValue(RATES, updatedRates);\n            this.setValue(CHOSEN_RATE, chosenRate);\n            this.setValue(TARGET_VALUE, multiplyAmount(this[SOURCE_VALUE], chosenRate));\n          })\n          .catch(error => {\n            this.setValue(ERROR, error);\n          })\n          .finally(this.finishLoading);\n      },\n    },\n    {\n      getRates: action.bound,\n      setValue: action.bound,\n      changeSourceCurrency: action.bound,\n      changeTargetCurrency: action.bound,\n      changeSourceValue: action.bound,\n      changeTargetValue: action.bound,\n      startLoading: action.bound,\n      finishLoading: action.bound,\n      cleanRates: action.bound,\n    }\n  )\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  padding: 0;\n  margin: 0;\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  list-style: none;\n`;\n\nconst Item = styled.li`\n  background: ${props => props.theme.colors.light};\n  color: ${props => props.theme.colors.background};\n  font-weight: bold;\n  min-width: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Menu = ({ items }) => (\n  <List>\n    {items.map(({ title, path }) => (\n      <Item key={path}>{title}</Item>\n    ))}\n  </List>\n);\n\nMenu.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Menu;\n","import React, { useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport styled from 'styled-components';\nimport Wrapper from './wrapper';\nimport Input from './input-number';\nimport Select from './select';\nimport ConverterRate from './converter-rate';\nimport { CURRENCIES_LIST } from '../constants/currencies';\nimport { StoreContext } from '../stores';\nimport Menu from './menu';\n\nconst ConverterInputs = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst onChange = handler => event => {\n  handler(event.target.name, event.target.value);\n};\n\nconst Converter = observer(() => {\n  const {\n    sourceValue,\n    targetValue,\n    sourceCurrency,\n    targetCurrency,\n    chosenRate,\n    changeSourceCurrency,\n    changeTargetCurrency,\n    changeSourceValue,\n    changeTargetValue,\n  } = useContext(StoreContext);\n\n  return (\n    <Wrapper header={<Menu items={[{ title: 'Currency converter', path: '/' }]} />}>\n      <ConverterInputs>\n        <Input name=\"sourceValue\" label=\"From\" value={sourceValue} onChange={onChange(changeSourceValue)} />\n        <Select\n          name=\"sourceCurrency\"\n          items={CURRENCIES_LIST}\n          onChange={onChange(changeSourceCurrency)}\n          value={sourceCurrency}\n        />\n        <Input name=\"targetValue\" label=\"To\" value={targetValue} onChange={onChange(changeTargetValue)} />\n        <Select\n          name=\"targetCurrency\"\n          items={CURRENCIES_LIST}\n          onChange={onChange(changeTargetCurrency)}\n          value={targetCurrency}\n        />\n      </ConverterInputs>\n      <ConverterRate sourceCurrency={sourceCurrency} targetCurrency={targetCurrency} chosenRate={chosenRate} />\n    </Wrapper>\n  );\n});\n\nexport default Converter;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderCmp = styled.header`\n  margin-bottom: 40px;\n  background: ${props => props.theme.colors.background};\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  color: ${props => props.theme.colors.light};\n  margin: 0;\n`;\n\nconst Header = () => (\n  <HeaderCmp>\n    <Title>Rate app</Title>\n  </HeaderCmp>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst MainWrapper = styled.main`\n  width: 1200px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-auto-columns: 1fr;\n  gap: 1rem;\n`;\n\nconst Main = ({ children }) => <MainWrapper>{children}</MainWrapper>;\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: grid;\n  row-gap: 0.5rem;\n`;\n\nconst Item = styled.li`\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst RatesList = ({ rates }) => (\n  <List>\n    {rates.map(([country, rate]) => (\n      <Item key={country}>\n        <span>{country}</span>\n        <span>{rate}</span>\n      </Item>\n    ))}\n  </List>\n);\n\nRatesList.propTypes = {\n  rates: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n};\n\nexport default RatesList;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { observer } from 'mobx-react-lite';\nimport styled from 'styled-components';\nimport Wrapper from './wrapper';\nimport { DEFAULT_CURRENCY } from '../constants/currencies';\nimport { StoreContext } from '../stores';\nimport RatesList from './rates-list';\n\nconst HeaderGrid = styled(Grid)`\n  padding: 0 1rem;\n`;\n\nconst LoadingWrapper = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Rates = observer(() => {\n  const { getRates, cleanList, loading, sourceCurrency, todayRates } = useContext(StoreContext);\n  useEffect(() => {\n    getRates(sourceCurrency);\n\n    return cleanList;\n  }, [getRates, cleanList, sourceCurrency]);\n\n  return (\n    <Wrapper\n      header={\n        <HeaderGrid container justify=\"space-between\" alignItems=\"center\">\n          <Grid item>Today&apos;s rates</Grid>\n          <Grid item>{`1 ${sourceCurrency} =`}</Grid>\n        </HeaderGrid>\n      }\n    >\n      {loading ? (\n        <LoadingWrapper>\n          <CircularProgress />\n        </LoadingWrapper>\n      ) : (\n        <RatesList rates={todayRates} />\n      )}\n    </Wrapper>\n  );\n});\n\nRates.propTypes = {\n  sourceCurrency: PropTypes.string,\n};\n\nRates.defaultProps = {\n  sourceCurrency: DEFAULT_CURRENCY,\n};\n\nexport default Rates;\n","import React from 'react';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { Normalize } from 'styled-normalize';\nimport { Header, Main, Rates, Converter } from '../components';\n\nconst theme = {\n  colors: {\n    background: '#121aa0',\n    text: '#000',\n    light: '#fff',\n  },\n};\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    overflow-x: hidden;\n    color: ${props => props.theme.colors.text};\n    margin: 0;\n  } \n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst Root = () => (\n  <ThemeProvider theme={theme}>\n    <>\n      <Normalize />\n      <GlobalStyle />\n      <Header />\n      <Main>\n        <Converter />\n        <Rates />\n      </Main>\n    </>\n  </ThemeProvider>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}